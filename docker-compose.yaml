services:
  metabase:
    image: metabase/metabase-enterprise:v1.53.9
    ports:
      - 3000:3000
      - 3300:3300
    container_name: metabase
    hostname: metabase
    volumes: 
      - /dev/urandom:/dev/random:ro
    environment:
      MB_LOAD_SAMPLE_CONTENT: false
      # MB_LOAD_ANALYTICS_CONTENT: true
      MB_DB_TYPE: postgres
      MB_DB_CONNECTION_URI: "postgres://app-db:5432/metabase?user=metabase&password=mysecretpassword&sslmode=prefer"
      MB_SITE_URL: http://localhost:3000/
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          cpus: '2'
          memory: 2048M
    networks: 
      - metanet
    depends_on: 
      app-db:
        condition: service_healthy
    healthcheck:
      test: curl --fail -X GET -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 10
  app-db:
    image: postgres:17-alpine
    container_name: app-db
    hostname: app-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: metabase
      POSTGRES_DB: metabase
      POSTGRES_PASSWORD: mysecretpassword
    networks:
      - metanet
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          cpus: '2'
          memory: 1024M
    command: -c log_statement=all -c 'max_connections=10000'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d metabase"]
      interval: 5s
      timeout: 5s
      retries: 3
  openssh-server:
    image: lscr.io/linuxserver/openssh-server:version-8.8_p1-r1
    container_name: ssh
    hostname: ssh
    environment:
      - PUBLIC_KEY_FILE=/root/.ssh/id_ed25519.pub
      - USER_NAME=metabase
    volumes:
      - $PWD/ssh/sshd_config:/config/ssh_host_keys/sshd_config
      - $PWD/ssh/keys/:/root/.ssh/
    networks: 
      - metanet
    ports:
      - 2222:2222
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
        reservations:
          cpus: '0.05'
          memory: 10M
  postgres-data1:
    image: postgres:17-alpine
    container_name: postgres-data1
    hostname: postgres-data1
    environment:
      POSTGRES_USER: metabase
      POSTGRES_DB: sample
      POSTGRES_PASSWORD: metasample123
    networks: 
      - metanet
    ports:
      - 5433:5432
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1024M
        reservations:
          cpus: '2'
          memory: 1024M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d sample"]
      interval: 5s
      timeout: 5s
      retries: 3
    command: -c log_statement=all -c max_connections=10000
  setup:
    image: python:3-alpine
    container_name: setup
    volumes:
      - $PWD/setup/:/app/
    networks:
      - metanet
    depends_on:
      metabase:
        condition: service_healthy
    command: sh -c "apk add postgresql-client && pg_restore -w --user metabase -h postgres-data1 -d sample -j 8 /app/sample.gz && pip install --disable-pip-version-check -r /app/requirements.txt && python /app/setup.py"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 64M
        reservations:
          cpus: '0.5'
          memory: 32M
    environment:
      PGPASSWORD: metasample123
      host: http://metabase
      port: 3000
      dbs: 3
networks: 
  metanet:
    driver: bridge